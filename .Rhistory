install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ibrary(ggplot2)
library(ggplot2)
install.packages("cowsay")
library(cowsay)
say("Hello wolrd", by="cat")
say("Hello wolrd", by="snow")
sort
Sys.time()
total <- 3030
total
print(total)
cat("total: ", total)
a <- 2
b <- 30
a+b
print(a+b)
a <-50
c <- a+b
print(c)
score <- c(23,45,76,23,876,56.23)
mean(score) ##평균 출력
foo <- c(20,34,65,16,98,58)
mean(foo)
v1 <-c(1:100) #1-100까지 저장
v1
v2 <- c(1,2, 1:10)
v2
v3 <-c(1,101,5)
v3
v3 <-seq(1,101,5)
v3
v4 <- rep(1, times = 5)
v4
v6 <- rep(c('a','b','c'),each =3)
v6
absent
absent <-c(3,4,5,6)
absent
names(absent)
names(absent) <-c('mon','tue','wed','thu')
absent
names(absent) <-c('mon','tue','wed','thu')
absent[3]
v1[c(1,3,5)]
v1[-2]
v1[-2]
v1[-c(5:90)]
v1[3:12]
names(sales)
names(sales)<- c('m1','m2','m3','m4')
sales
names(sales)
names(sales)
sales <- c(1,2,3,4)
names(sales)
names(sales)<- c('m1','m2','m3','m4')
sales
v1[2] <-3
v1[c(1,5)<-c(10,20)]
v1[c(1,5)]<-c(10,20)
v1
absent
absent[1] <-100
absent
absent [c(1,2)]<-c(3,4)
absent
absernt [3:4] <c(30,70)
abernt [3:4] <c(30,70)
absent[3:4] <c(30,70)
absent[3:4] <-c(30,70)
absent
sort(x= d, decreasing = FALSE)
sort(x=d, decreasing = FALSE)
foo <- paste(1:12,seq='월')
래ㅐ
foo
foo <- paste(1:12,sep ='월')
foo
foo <- paste(1:12,seq ='월')
foo
foo <-paste(1:12,'월',sep='')
foo
# 116p
ls
sales <- c(1,2,3,4)
ls()
rm(foo)
ls()
rm(list = ls())
ls()
d <- c(1,2,3,4,5)
2*d
d-5
3*d+4
d
d
d <-d*2
d
3*d+4
d
d
d <- d*4
d
rm(d)
x <- c(1,2,3,4)
y <- c(5,6,7,8)
x +y
x*y
y <-c(5,6,7)
x +y
y <- c('a','c','b,'d')
y <- c('a','c','b','d')
x +y
m <-c(x,y)
m
m <- c( y,x)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
m <- c( y,x)
m
p <- c(32,45,y,x,'apple')
p
y <-c(5,6,7,8)
m <-c(x,y)
m
#127 벡터에 적용 가능한 함수
sum(x)
avg(x)
mean(x)
length(x)
sort6(x)
sort(x)
range(x)
desc(x)
decs(x)
sort (x, decreasing = TRUE)
#130p 연산자
sum (x)==-sum(y)
sum (x)!=-sum(y)
d <- 1:9
d >=5
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
d [d>5]
d [d>5]
d >=5 #5보다 크거나 같은 것
d <- 1:9
d >=5 #5보다 크거나 같은 것
d[d>5]
d[ 2<d<7]
d[ 2<d & d<7]
sum ((d>5))
sum (d>5)
d
x <- sum(d>5)
x
d >5
length(d)
length(d>5)
say("Hello wolrd", by="cat")
say("ㅜㅜ", by="cat")
say("Hello wolrd", by="snow")
d[d>5]
sum(d[d>5])
1 == false
1== true
1 == FLASE
1 == FALSE
1 == TRUE
x <-c(4,5)
y<- c(63,68)
x
y
sale.x <-2 *x
sale.y <-2.5 *y
sale.x
sale.y
sale.day <- sale.x + sale.y
sale.day
names(sale.day) <-C('월','화','수','목','금','토','일')
names(sale.day) <-C('MON','tue','wed','thu','fri','sat','sun')
names(sale.day) <-c('MON','tue','wed','thu','fri','sat','sun')
names(sale.day) <-c('MON','tue')
sale.day
sum(sale.day)
#135p 팩터와 리스트
bt <-c('a','b','b','o')
bt
bt.new <- factor(bt)
br
bt
bt.new
bt[5]
bt[5]
bt25]
bt[2]
bt.new[2]
bt[1]
bt.new[1]
#135p 팩터와 리스트
bt <-c('a','b','b','ab','o')
bt
bt.new <- factor(bt) # 중북값 제외 하고 알려줌
bt[2]
bt[2]
bt.new[2]
as.integer(bt.new)
bt
#138p 리스트
h,list <-c('balling','tennis')
#138p 리스트
h.list <-c('balling','tennis')
h.list
person <- list(name='Tome',age=25,student=TRUE, hobby=h.list)
person
person[1]
person[3]
$name
$age
$name
person$name
person$hobby
#152p 매트릭스
z <-matrix(1:20, nrow=4, ncol=5)
z
x <- 1:4
x
y <-5:8
y
m1 <- cbind (x,y)
m1
m2 <- rbind(x,y)
m2
m3 <- rbind (m2, x)
m3
m4 <- cind (z,x)
m4
m4 <- cind (z,x)
m4 <- cbind (z,x)
m4
zz[2,3]
z[2,3]
z[1,2]
z[1:10]
z
z[,4]
z[2,]
z
z [2,1:3]
z[,c(1,4)]
z[1:2,]
z[1,c(1,2,4)]
z[2:4]
z[2,5:9]
z[c,(1,5)]
z[,c(1,5)]
rm()
rm()
rm(list = ls())
score <- matrix(c(90,87,76,98,88,94,500,27,96,74,75,58), nrow = 4)
score
rownames(score) <- c('john','tom','mark','jane')
score
colnames(score) <-c('Eng','math','science')
score
View(score)
View(score)
View(score)
score['john','math']
score['tom',c('math, science')]
score['tom',c('math','scince')]
score['tom',c('math','science')]
score['jane','math']
score['mark',]
score['Eng',]
score[,'Eng']
score
colnames(score)[2]
rownames(score)[1]
#165p 데이터프레임은 무엇인가요
city <-c('seoul','tokyo','washington')
rank <-c(1,3,2)
rank
city.info <-data.frame(city, rank)
city.info
#iris 데이터셋 167p
iris
iris[,c(1:2)]
iris[,c(1,3,5)]
iris[,c('Sepal.Lenght','Species')]
iris[,c('Sepal.Length','Species')]
iris[1:5,c(1,3)]
iris[1:4,c(1,3)]
iris[1:4,c(1,2)]
#매트릭스와 데이터프레임을 다루어볼까요 #172
dim(iris)
nrow(iris)
ncol(iris)
head(iris)
head(iris)
tail(iris)
str(iris)
iris[,5]
levels(iris[,5])
table(iris[,'Species'])
#매트릭스와 데이터프레임에 함수적용 177p
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
rowMeans(iris[,-4])
rowMeans(iris[,-6])
#행과 열의 방향 전환
z <-matrix(1:20, nrow=4, ncol=5)
z
t(z)
a <-matrix(1:20,ncol=5, nrow=4)
a
t(a)
rm(a)
a <-matrix(1:12,ncol=4)
a
rm(a)
#조건에 맞는 행과 열의 값 추출 178
IR.1 <-subset(iris, Species =='setosa')
IR.1
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Wirdh <4.0)
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Witdh <4.0)
IR.2
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Witdh <4.0)
#조건에 맞는 행과 열의 값 추출 178
IR.1 <-subset(iris, Species =='setosa')
IR.1
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Witdh <4.0)
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Width <4.0)
IR.2
a <-matrix(1:20,4,5)
a
b <-matrix(12:40,4)
b
2*a
a+b
rm(b)
b <-matrix(12:40,4,5)
b <-matrix(21:40,4,5)
a+b
b <-matrix(21:40,4,5)
b
a <-a*3
a
b<-b-5
b
#메트릭스와 데이터프레임의 자료구조 확인과 변환 182p
class(iris)
class(state.x77)
is.matrix(iris)
is.matrix(state.x77)
#매트릭스와 데이터프레임의 자료구조 변환
is.matrix(state.x77)
st <-data.frame(state.x77)
head(st)
class(st)
#데이터프레임을 매트릭스로 변환
is.data.frame(iris[,1:4])
iris.m <-as.matrix(iris[,1:4])
head(iris)
class(iris.m)
#185p
iris$Species
#chap6, 데이터의 입력과 출력은 어떻게 하는 것일까 200p
age <- c(63,4,74,23,12,43,6,8,3)
young <-min (age)
old <-max(age)
young
old
cat (' 가장 젊은 사람의 나이는 ' young,'이고','가장 나이든 사람의 나이는',
cat (' 가장 젊은 사람의 나이는 ', young,'이고','가장 나이든 사람의 나이는',
old,'이다')
ㅊㅁㅅ
cat
install.packages('svDialogs')
library(svDialogs)
user.input <-digInput('Input income')$res
user.input <-dlgInput('Input income')$res
user.input
income <- as.numeric(user.input)
income
user.input <-dlgInput('Input income')$res
income <- as.numeric(user.input)
income
tax <-income * 0.05
cat ('세금: ',ㅅㅁㅌ)
cat ('세금: ',tax)
user.input <-dlgInput('Input income')$res # 유저 입력 받는 코드
user.input
income <- as.numeric(user.input)
income
tax <-income * 0.05
cat ('세금: ',tax)
View(IR.1)
View(IR.2)
View(iris.m)
#print(), cat() 204p
x <-26
y<-'입니다'
z <-c(12,14,15,3)
print(x)
print(y)
print(z)
print(iris)
iris
print(iris[1:5])
print(iris[1:5,])
print(x,y)
cat(x,y)
car(x,'\n\n\n')
cat(x,'\n\n\n')
car(iris[1:5],\n\n\n)
car(iris[1:5],'\n\n\n')
getwd()
setwd('D:\Han\23-Project1-R')
setwd('D:/Han/23-Project1-R')
getwd()
getwd()
setwd("~/")
#파일을 이용해 데이터를 읽고 쓰는 방법을 알아보자 209p
getwd()
setwd('D:/Han/23-Project1-R')
#파일을 이용해 데이터를 읽고 쓰는 방법을 알아보자 209p
getwd()
air <-read.csv('airquality.csv')
#2 .csv 파일 읽기와 쓰기 (자주씀)
setwd('D:/Han/23-Project1-R')
air <-read.csv('airquality.csv')
air <-read.csv('airquality.csv',header = T)
air <-read.csv('airquality.csv',header = T)
getwd()
air <-read.csv('airquality.csv',header = T)
class (air)
dhad(air)
head(air)
my.iris <- subset(iris, Species == 'setosa')
wirte.csv(my.iris, ' my_iris.csv',row.names=F)
write.csv(my.iris, ' my_iris.csv',row.names=F)
install.packages('xlsx')
library(xlsx)
air <-read.xlsz('D:/Han/23-Project1-R', header=T,sheetIndex=1)
air <-read.xlsx('D:/Han/23-Project1-R', header=T,sheetIndex=1)
