install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ibrary(ggplot2)
library(ggplot2)
install.packages("cowsay")
library(cowsay)
say("Hello wolrd", by="cat")
say("Hello wolrd", by="snow")
sort
Sys.time()
total <- 3030
total
print(total)
cat("total: ", total)
a <- 2
b <- 30
a+b
print(a+b)
a <-50
c <- a+b
print(c)
score <- c(23,45,76,23,876,56.23)
mean(score) ##평균 출력
foo <- c(20,34,65,16,98,58)
mean(foo)
v1 <-c(1:100) #1-100까지 저장
v1
v2 <- c(1,2, 1:10)
v2
v3 <-c(1,101,5)
v3
v3 <-seq(1,101,5)
v3
v4 <- rep(1, times = 5)
v4
v6 <- rep(c('a','b','c'),each =3)
v6
absent
absent <-c(3,4,5,6)
absent
names(absent)
names(absent) <-c('mon','tue','wed','thu')
absent
names(absent) <-c('mon','tue','wed','thu')
absent[3]
v1[c(1,3,5)]
v1[-2]
v1[-2]
v1[-c(5:90)]
v1[3:12]
names(sales)
names(sales)<- c('m1','m2','m3','m4')
sales
names(sales)
names(sales)
sales <- c(1,2,3,4)
names(sales)
names(sales)<- c('m1','m2','m3','m4')
sales
v1[2] <-3
v1[c(1,5)<-c(10,20)]
v1[c(1,5)]<-c(10,20)
v1
absent
absent[1] <-100
absent
absent [c(1,2)]<-c(3,4)
absent
absernt [3:4] <c(30,70)
abernt [3:4] <c(30,70)
absent[3:4] <c(30,70)
absent[3:4] <-c(30,70)
absent
sort(x= d, decreasing = FALSE)
sort(x=d, decreasing = FALSE)
foo <- paste(1:12,seq='월')
래ㅐ
foo
foo <- paste(1:12,sep ='월')
foo
foo <- paste(1:12,seq ='월')
foo
foo <-paste(1:12,'월',sep='')
foo
# 116p
ls
sales <- c(1,2,3,4)
ls()
rm(foo)
ls()
rm(list = ls())
ls()
d <- c(1,2,3,4,5)
2*d
d-5
3*d+4
d
d
d <-d*2
d
3*d+4
d
d
d <- d*4
d
rm(d)
x <- c(1,2,3,4)
y <- c(5,6,7,8)
x +y
x*y
y <-c(5,6,7)
x +y
y <- c('a','c','b','d')
y <- c('a','c','b','d')
x +y
m <-c(x,y)
m
m <- c( y,x)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
m <- c( y,x)
m
p <- c(32,45,y,x,'apple')
p
y <-c(5,6,7,8)
m <-c(x,y)
m
#127 벡터에 적용 가능한 함수
sum(x)
avg(x)
mean(x)
length(x)
sort6(x)
sort(x)
range(x)
desc(x)
decs(x)
sort (x, decreasing = TRUE)
#130p 연산자
sum (x)==-sum(y)
sum (x)!=-sum(y)
d <- 1:9
d >=5
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
d [d>5]
d [d>5]
d >=5 #5보다 크거나 같은 것
d <- 1:9
d >=5 #5보다 크거나 같은 것
d[d>5]
d[ 2<d<7]
d[ 2<d & d<7]
sum ((d>5))
sum (d>5)
d
x <- sum(d>5)
x
d >5
length(d)
length(d>5)
say("Hello wolrd", by="cat")
say("ㅜㅜ", by="cat")
say("Hello wolrd", by="snow")
d[d>5]
sum(d[d>5])
1 == false
1== true
1 == FLASE
1 == FALSE
1 == TRUE
x <-c(4,5)
y<- c(63,68)
x
y
sale.x <-2 *x
sale.y <-2.5 *y
sale.x
sale.y
sale.day <- sale.x + sale.y
sale.day
names(sale.day) <-C('월','화','수','목','금','토','일')
names(sale.day) <-C('MON','tue','wed','thu','fri','sat','sun')
names(sale.day) <-c('MON','tue','wed','thu','fri','sat','sun')
names(sale.day) <-c('MON','tue')
sale.day
sum(sale.day)
#135p 팩터와 리스트
bt <-c('a','b','b','o')
bt
bt.new <- factor(bt)
br
bt
bt.new
bt[5]
bt[5]
bt[25]
bt[2]
bt.new[2]
bt[1]
bt.new[1]
#135p 팩터와 리스트
bt <-c('a','b','b','ab','o')
bt
bt.new <- factor(bt) # 중북값 제외 하고 알려줌
bt[2]
bt[2]
bt.new[2]
as.integer(bt.new)
bt
#138p 리스트
h,list <-c('balling','tennis')
#138p 리스트
h.list <-c('balling','tennis')
h.list
person <- list(name='Tome',age=25,student=TRUE, hobby=h.list)
person
person[1]
person[3]
$name
$age
$name
person$name
person$hobby
#152p 매트릭스
z <-matrix(1:20, nrow=4, ncol=5)
z
x <- 1:4
x
y <-5:8
y
m1 <- cbind (x,y)
m1
m2 <- rbind(x,y)
m2
m3 <- rbind (m2, x)
m3
m4 <- cind (z,x)
m4
m4 <- cind (z,x)
m4 <- cbind (z,x)
m4
zz[2,3]
z[2,3]
z[1,2]
z[1:10]
z
z[,4]
z[2,]
z
z [2,1:3]
z[,c(1,4)]
z[1:2,]
z[1,c(1,2,4)]
z[2:4]
z[2,5:9]
z[c,(1,5)]
z[,c(1,5)]
rm()
rm()
rm(list = ls())
score <- matrix(c(90,87,76,98,88,94,500,27,96,74,75,58), nrow = 4)
score
rownames(score) <- c('john','tom','mark','jane')
score
colnames(score) <-c('Eng','math','science')
score
View(score)
View(score)
View(score)
score['john','math']
score['tom',c('math, science')]
score['tom',c('math','scince')]
score['tom',c('math','science')]
score['jane','math']
score['mark',]
score['Eng',]
score[,'Eng']
score
colnames(score)[2]
rownames(score)[1]
#165p 데이터프레임은 무엇인가요
city <-c('seoul','tokyo','washington')
rank <-c(1,3,2)
rank
city.info <-data.frame(city, rank)
city.info
#iris 데이터셋 167p
iris
iris[,c(1:2)]
iris[,c(1,3,5)]
iris[,c('Sepal.Lenght','Species')]
iris[,c('Sepal.Length','Species')]
iris[1:5,c(1,3)]
iris[1:4,c(1,3)]
iris[1:4,c(1,2)]
#매트릭스와 데이터프레임을 다루어볼까요 #172
dim(iris)
nrow(iris)
ncol(iris)
head(iris)
head(iris)
tail(iris)
str(iris)
iris[,5]
levels(iris[,5])
table(iris[,'Species'])
#매트릭스와 데이터프레임에 함수적용 177p
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
rowMeans(iris[,-4])
rowMeans(iris[,-6])
#행과 열의 방향 전환
z <-matrix(1:20, nrow=4, ncol=5)
z
t(z)
a <-matrix(1:20,ncol=5, nrow=4)
a
t(a)
rm(a)
a <-matrix(1:12,ncol=4)
a
rm(a)
#조건에 맞는 행과 열의 값 추출 178
IR.1 <-subset(iris, Species =='setosa')
IR.1
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Wirdh <4.0)
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Witdh <4.0)
IR.2
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Witdh <4.0)
#조건에 맞는 행과 열의 값 추출 178
IR.1 <-subset(iris, Species =='setosa')
IR.1
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Witdh <4.0)
IR.2 <-subset(iris, Sepal.Length <5.0 & Sepal.Width <4.0)
IR.2
a <-matrix(1:20,4,5)
a
b <-matrix(12:40,4)
b
2*a
a+b
rm(b)
b <-matrix(12:40,4,5)
b <-matrix(21:40,4,5)
a+b
b <-matrix(21:40,4,5)
b
a <-a*3
a
b<-b-5
b
#메트릭스와 데이터프레임의 자료구조 확인과 변환 182p
class(iris)
class(state.x77)
is.matrix(iris)
is.matrix(state.x77)
#매트릭스와 데이터프레임의 자료구조 변환
is.matrix(state.x77)
st <-data.frame(state.x77)
head(st)
class(st)
#데이터프레임을 매트릭스로 변환
is.data.frame(iris[,1:4])
iris.m <-as.matrix(iris[,1:4])
head(iris)
class(iris.m)
#185p
iris$Species
#chap6, 데이터의 입력과 출력은 어떻게 하는 것일까 200p
age <- c(63,4,74,23,12,43,6,8,3)
young <-min (age)
old <-max(age)
young
old
cat (' 가장 젊은 사람의 나이는 ' young,'이고','가장 나이든 사람의 나이는',
cat (' 가장 젊은 사람의 나이는 ', young,'이고','가장 나이든 사람의 나이는',
old,'이다')
ㅊㅁㅅ
cat
install.packages('svDialogs')
library(svDialogs)
user.input <-digInput('Input income')$res
user.input <-dlgInput('Input income')$res
user.input
income <- as.numeric(user.input)
income
user.input <-dlgInput('Input income')$res
income <- as.numeric(user.input)
income
tax <-income * 0.05
cat ('세금: ',ㅅㅁㅌ)
cat ('세금: ',tax)
user.input <-dlgInput('Input income')$res # 유저 입력 받는 코드
user.input
income <- as.numeric(user.input)
income
tax <-income * 0.05
cat ('세금: ',tax)
View(IR.1)
View(IR.2)
View(iris.m)
#print(), cat() 204p
x <-26
y<-'입니다'
z <-c(12,14,15,3)
print(x)
print(y)
print(z)
print(iris)
iris
print(iris[1:5])
print(iris[1:5,])
print(x,y)
cat(x,y)
car(x,'\n\n\n')
cat(x,'\n\n\n')
car(iris[1:5],\n\n\n)
car(iris[1:5],'\n\n\n')
getwd()
setwd('D:\Han\23-Project1-R')
setwd('D:/Han/23-Project1-R')
getwd()
getwd()
setwd("~/")
#파일을 이용해 데이터를 읽고 쓰는 방법을 알아보자 209p
getwd()
setwd('D:/Han/23-Project1-R')
#파일을 이용해 데이터를 읽고 쓰는 방법을 알아보자 209p
getwd()
air <-read.csv('airquality.csv')
#2 .csv 파일 읽기와 쓰기 (자주씀)
setwd('D:/Han/23-Project1-R')
air <-read.csv('airquality.csv')
air <-read.csv('airquality.csv',header = T)
air <-read.csv('airquality.csv',header = T)
getwd()
air <-read.csv('airquality.csv',header = T)
class (air)
dhad(air)
head(air)
my.iris <- subset(iris, Species == 'setosa')
wirte.csv(my.iris, ' my_iris.csv',row.names=F)
write.csv(my.iris, ' my_iris.csv',row.names=F)
install.packages('xlsx')
library(xlsx)
air <-read.xlsz('D:/Han/23-Project1-R', header=T,sheetIndex=1)
air <-read.xlsx('D:/Han/23-Project1-R', header=T,sheetIndex=1)


#-----------------20230412-------------------------------------
#20230413----------------------------------220p----
setwd('c:/Rwork') #C에 생성
getwd()
print('hello')
a <- 10; b<-20
sink('result.txt',append=T)
cat('hello world')
sink('result.txt',append=T)
cat('a*b',a*b,'\n')
sink()
cat('hello \n')
sink('result.txt',append=F)
cat('hello \n')
cat('hello cat\n')
sink()
sink('result.txt',append=F) #메모장 지워짐
sink('result.txt',append=T) #메모장 안지워짐
print('print \n')
sink()  #이거 없이도 들어간다

#탭이나 고백으로 분리된 파일 221p
setwd('c:/Rwork')
getwd()
air <- read.table('airquality.csv',header = T,sep='')
air <- read.table('airquality.txt',header = T,sep='')
head(air)
View(air)
tail(air)

#234p 제어문과 사용자 정의 함수 사용하기
job.type <-'a'
if(job.type =='b'){
  bonus<-200 #직군이 b가 아닐때
}else{
  bonus<-100 #직군이 b가 아닌 나머지 경우 실행
}
print(bonus)

a <-10
b<-20
c <- ifelse (a>b,a,b)
print(c)

#243 반복문
for (i in 1:5){
  print('*')
}

for (i in 7:11){
  print('i')
}

for(i in 1:9){  #2단
  cat('2*', i,'=',2*i,'\n')
}

#짝수인지 확인 246p
for(i in 1:20){
  if(i %%2==0){
    cat(i,' ')
  }
}

#248p while
sum <-0
i<-1

while (i <=100){
  sum <-sum +i
  i<-i+1
}
print(sum)

#250p apply
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
apply(USJudgeRatings, 1,mean)
apply(USJudgeRatings, 2,mean)

#사용자 정의 함수 255p
mymax <-function(x,y){
  num.max <-x
  if(x>y){
}
return  (num.max)
}
mymax(10,15)
a <-mymax(21,15)
a
b <-mymax(33,22)
print(a+b)

#257 매개변수의 기본값 설정
mydiv <-function(x,y=2){
  result <-x/y
  return(result)
}
mydiv(x=10,y=3)
mydiv(10,3)
mydiv(10)

#사용자 정의 함수의 저장과 재실행 260p
source('mydiv.R')
getwd()
a <- mydiv(20,4)
a

#조건에 맞는 데이터의 위치를 찾아보자 264p
score <-c(65,47,86,35,75,85,78,45)
which(score==85)
which(score >=50)
which(score <=50)
max(score)
which(50<=score)
which.min(score)
idx <-which(score <=60)
score[idx] <-61
score

idx <- which(score >=80)
score.high <-score[idx]
score.high
#for에서 i값을 증가시킬 때, 무엇이다른지, 
#삼항연산자 ifelse문. 
#사용자지정함수 funciton 매개변수.
#source (mydiv.R)

#20230511
# rm(list=ls()) 데이터 전체 삭제
installed.packages('wordcloud')
library(wordcloud)
foo <-rownames(USArrests)
bar <-USArrests
foobar <-data.frame(foo,bar)
wordcloud(words=foobar$foo)
#중간고서 답안

#다중변수 데이터를 분석해봅시다 379p
#다중변수 데이터는 변수드르이 개별 분석보다 변수 간의 관계를 찾는 것이 더 중요
# 1.두변수의 상관관계

#1. 데이터 확인
head (pressure)
#2.산점도 작성
plot(pressure$ temperature, #x축 그래프
     pressure$pressure,#y축 그래프
     main='온도와 기압', # 그래프 제목
     xlab='온도 (화씨)',#x축 레이블
     ylab = '기압')# y 축 레이블

#상관관계 381p
#x축  변수의 값이 증가하면y축의 변수의 값이 비례해서 증거하거나 반대로 x축 변수의 값이 
#증가하며
#상관계수가 (-) 인 경우 x,y가 반비례 음의 상관관계에 있음
#상관계수가 (+) 인 경우 x, y 가 비례 양의 상관관계에 있음

#381 cars 데이터셋을 이용한 산점도와 상관계수 계산 (plot 잘 알아두세요)
# 데이터 확인
head (cars)
# 산점도의 작성 
plot(cars$speed, #x축 데이터
     cars$dist,   #y축 데이터
     main='자동차 속도와 제동거리', #그래프 제목
     xlab='속도', # x축 레이블
     ylab='제동거리') #y측 레이블

#상관계수 cor
cor (cars$speed, cars$dist)

# 다중변수 사이의 상관간계 383

#데이터 확인
st <-data.frame(state.x77) #매트릭스(state.x77)를 데이터 프레임으로 변환
head(st)

#다중 산점도 작성
plot(st)

#다중 상관계수
cor(st)

#기대수명과 살인 범죄율은 매우 강한 음의 상관관계
#인당 소득과 고등학교 졸업률은 어느 정도의 양의 상관관계
#상관관계를 구하는cor()함수에 2개가 아닌 3개 이상의 변수 데이터를 입력하면 다중 산점도와 비슷한 형태의 결과가 나타남
#살인 범죄율과 문맹률으ㅢ 상관관계는 상당히 높은 상관관계
#상관관계는 인과관계를 의미하지 않는다. 기대수명과 실인 범죄율의 상관계수가 
#높다고 해서 범죄가 원인이 되어 기대수명이 낮아진다고 단정할 수는 없다.
#인과관계는 보다 심층적인것 385p

#chapter 11, 데이터 전처리 알아보기
#결측값에 대해 알아봅시다. 394p

#데이터 전처리
#확보한 데이터를 정제하고 가공해 분석에 적합한 형태로 만드는과정
#현실에서는 잘 정리된 데이터셋을 바로 얻는 경우가 많지 않음
#데이터 전처리는 전체 분석 과저에서 오랜 시간을 처지

#결측값의 저리
#결측값은 데이터 수집, 저장과정에서 값을 얻지 못하는 경우 발생 (NA 로 표현)
#결측값이 섞여있는 데이터셋은 분석할 때 문제를 일으킴 ex) 합 평균 계산 시
#결측값은 데이터의 수집, 저장과정에서 값을 얻지 못하는 경우 발생. 결측값은 NA로 표현된다.
#결측값 처리 방법은 1.결측값을 제거, 제외한 후 분석 2.결측값을 추정하여 적당한 값으로 치환한 후 분석

score <- c(90,70,NA,40,60)
sum(score)

#벡터의 결측값
z <-c(1,2,3,NA,5,NA,8) # 결측값이 포함된 벡터 
sum(z) #정산 계싼 안됨
is.na(z) #결측값 여부 확인
sum(is.na(z)) #결측값 개수 확인
sum(z, na.rm=TRUE) #결측값 제회하고 합계를 계산

#NA를 다른 값으로 대처하는 방법과 NA를 제거하는 방법 396p
z1 <-c(1,2,3,NA,5,NA)
z2<-c(5,7,3,NA,NA)
z1[is.na(z1)] <-0 #NA를 0으로 치환
z1
z3 <-as.vector(na.omit(z2)) #NA를 제거하고 새로운 벡터 생성
z3

#매트릭스와 데이터 프레임의 결측값 397p
#NA를 포함한 test데이터 생성
x <-iris
x[1,2] <-NA; x[1,3] <-NA
x[2,3]<-NA; x[3,4]<- NA
head(x)
#for문을 이용한 방법
i <-c(1,2,NA,4,NA,76,NA)
for (i in 1:ncol(x)) {
  this.na <-is.na(x[,1])
  cat(colnames(x)[i],'\t',sum(this.na), '\n')
}
#is.na함수를 통해 각 열별로  NA의 개수를파악한 뒤 cat ()함수를 통해 열이름과 NA의 개

#apply를 이용한 방법
col_na <-function(y){
  return (sum(is.na(y)))
}
na_count <-apply(x,2,FUN=col_na)
na_count

#행 별로 결측값이 몇 개 인지 알아보기 398p 
rowSums(is.na(x)) # 행별 NA 개수
sum(rowSums(is.na(x))>0) #NA가 포함된 행의 개수
sum(is.na(x)) #데이터셋 전체에서 NA 개수

#NA를 제외하고 새로운 데이터셋 만들기. 이 작업을 위해 complete.cases() 사용된다.
#어떤 데이터셋에서 NA를 포함하지 않은 완전한 (complete)행들을 찾아준다.
head(x)
x[!complete.cases(x),] #NA가 포함된 행들을 나타냄
y <-x[complete.cases(x),] #NA가 포함된 행들을제거
head(y) #새로운 데이터셋인 y의 내용 확인 

#400p
col_na <-function(y){
  return (sum(is.na(y)))
}

#R에서 제고앟는 airquality 데이터셋에 대해 열별로 NA값이 존재하는지 apply()함수를 이용해 나타내지
apply(airquality, 2, FUM=col_na)

#SEctio02. 이것이 정렬입니다
#정렬(sort)은 주어진 기준에 따라 데이터를 크기순으로 재배열하는 과정
#벡터의 정렬
v1 <-c(1,2,5,3,6)
v1 <-sort(v1)
v1


-----------------------
#602377123한보름
#20230518

#SEctio02. 이것이 정렬입니다 402p

#정렬(sort)은 주어진 기준에 따라 데이터를 크기순으로 재배열하는 과정
#숫자의 경우는 숫자의 크기에 따라 정렬이 가능
#문자열의 경우는 알파벳 순 또는 가나다순으로 정렬 가능

#벡터의 정렬
v1 <-c(1,2,5,3,6)
v1 <-sort(v1) #오름차순(기본값)
v1 
v2 <-sort(v1, decreasing =T) # 내림차순
v2
#내림차순으로 하려면 sort()매개변수 decreasing =T 로 설정하면 된다.
name <-c('가나다','라마','바사')
sort(name) #오름차순
sort(name, decreasing = T) #내림차순

#403p
#sort함수는 값의 크기에 따라 값들을 정렬하는 함수이다.
#order()함수는 값의 크기에 따라 값들의 인덱스를 정렬하는 함수 
order(name)#오름차순
order(name, decreasing = T)#내림차순, 값들의 인덱스를 값의 크기에 따라 내림차순으로 정렬하는 것

idx <-order(name)
name[idx] #오름차순 정렬
#이 명령문은 값의 크기에 따라 오름차순으로 인덱스를 정렬한 뒤, 정렬된 인덱스를 이용해 값을 정렬하는 과정
#값의 크기에 따라 오름차순으로 인덱스를 정렬한 뒤, 정렬된 인덱스를 이용하여 값을 정렬

#메트릭스와 데이터프레임의 정렬 404p
#특정 열의 값들을 기준으로 행을 재배열하는 방법

#iris 데이터셋에서 꽃잎의 길이를 기준으로 행을 재정렬하는 예
head(iris) #행들의 순서를 나타냄. 입력된 순서대로 번호가 붙는다
order(iris$Sepal.Length)  # 주어진 열의 값들에 대해 순서를 붙인다.,$ = 데이블에서 열을 선 
iris[order(iris$Sepal.Length),]#오름차순으로 정렬 택
iris[order(iris$Sepal.Length,decreasing =T),] #내림차순으로 정렬
iris.new <-iris[order(iris$Sepal.Length),] #정렬된 데이터를 저장
head(iris.new)
iris[order(iris$Species, decreasing = T, iris$Petal.Length),] #정렬 기준이 2개

#정렬결과를 유지하기 위해선 새로운 벡터(iris.new)에 저장해야됨

#Section 03. 샘플링과 조합 409p

#샘플링:주어진 값들에서 임의의 개수만큼 값을 추출하는 작업
#한 번 뽑은 값을 제외한 뒤 새로운 값을 추출하는 방식 -> 비복원 추출(데이터분석에서 주로 사용)
#뽑았던 값을 다시 포함시켜 새로운 값을 추출하는 방식 -> 복원 추출

#샘플링이 필요한 때 : 데이터셋이 너무 커, 분석에 시간이 많이 걸리는 경우, 일부 데이터만 추출하여 대략의 결과를 미리 확인 

x <- 1:100
y <-sample(x,size = 10,replace = FALSE) #비복원 추출(replace = FALSE)
y
#sample()람수에서size는 추출할 값의 개수를 지정하는 매개변수이고, replace=FALSE는 비복원추출을 의미,복원 추출을 원하면 replaces =TRUE 지정

#iris데이터셋에서 50개의 행을 임의로 추출하는 예 409
idx <-sample(1:nrow(iris),size=50,replace = F) #50개의 행 추출 , nrow는 함수는 행의 개수를 알아내는 함수.1:150 사이의 숫자중 50개를 임의로 추출하여 idx에 저장
iris.50 <-iris[idx,] #50개의 행 임의로 추출
dim(iris.50) # 행과 열의 개수 확인
head(iris.50)

#410
#sample()함수는 임의 추출이기 때문에 함수를 실행할 때마다 결과가 다름.
#임의로 추출하되 다음에도 동일한 결과가 나오도록 해야할 째는 sample()실행전 , set.seed()함수를 먼저 실행.
#set.seed()함수의 매개변수 값이 같으면 sample()함수의 결과도 같다. 
sample(1:20, size=5)
sample(1:20, size=5)
sample(1:20, size=5)# 매번 다른 결과값
set.seed(100)
sample(1:20, size=5)
set.seed(100)
sample(1:20, size=5) 
#set.seed(100)을 먼저 실행한 후 샘플링을 두 번 징행하면 결과가 같지만 set.seed()힘수 없이 샘플링을 하면 결과가 다르게 나온다
#알 수 있는 사실은 set.seed()함수의 효과는 샘플링을 한 번 하면 사라진다는 것이다. 

#조합 412
#조합(combination) ㅣ 주어진 데이터값 중에서 몇 개씩 짝을 지어 추출하는 작업으로 combn()함수를 사용
#결과에서 얻은 각 열은 하나의 조합을 의미한다.

combn(1:5,3) #1-5에서 3개를 뽑는 조합
x <- c('red','green','blue','black','white')
com <-combn(x,2) #x의 우언소를 2개씩 뽑는 조합
com

for (i in 1:ncol(com)){ #조합을 출력
  cat(com[,i],'\n')
}

#Section4.데이터 집계
#집계: 데이터의 그룹에 대해서 합계나 평군을 계산하는 작업 aggregate()함수 사용

#iris데이터셋에서 각 품종별로 꽃잎 꽃받침의 폭과 길이의 평균을 나타내자.
agg<- aggregate(iris[,-5], by=list(iris$Species), FUN=mean)
agg
#iris[,-5] : 집계 작업을 수행할 데이터셋을 의미한다.
#by=list(iris$Species) :집계 작업의 기준이 품종 열의 값임을 의미한다.
# FUN= mean :집계 작업의 내용이 평균 (mean)계산임을 의미한다

#2개의 기준에 대해 다른 열들의 최댓값 구하기 417p
#mtcars데이터셋에서  cyl, vs 를 기준으로 다른 열들의 최댓값 구하기
head(mtcars)
agg <-aggregate(mtcars, by=list(cyl=mtcars$cyl), vs =mtcars$vs,FUN=max)
agg

#Chapter 고급 그래프 작성하기
#SEction 1.나무지도 426p
#나무지도를 작성하기 위해선 treemap 패키지를 설치해야된다.
install.packages('treemap')
library(treemap) #treemap패키지 불러오기 
data(GNI2014) #데이터 불러오기
head(GNI2014) #데이터 내용 보기

treemap(GNI2014,
        index=c('continent','iso3'), #계층 구조 설정 (대륙 -국가), 나무지도 상에서 타일들이 대륙안에 국가의 형태로 배치되는 것을 지정
        vSize='population', #타일의 크기. 타일의 크기를 결정하는 열을 지정
        vColor='GNI',#타일의 컬러, 타일의 색상을 지정
        type='value', #타일 컬러링 방법, 타일의 컬러링 방법을 지정
       # bg.labels='yellow', #레이블의 배경색
        title='World s GNI') #나무지도 제목
        
        
st <-data.frame(state.x77) #매트릭스를 데이텊레임으로 변환
st <-data.frame(st, stname=rownames(st)) #주의 이름 열 stname 추가

treemap(st,
        index=c('stname'), # 타일에 주 이름 표기
        vSize='Area', #타일의 크기
        vColor='Income', #타일의 컬러
        type='value',#타일의 컬러링 방법
        title='USA states area and income') #제목
        
treemap(st,
        index=c('stname'),
        vSize='Population',
        vColor='Illiteracy',
        type='value',
        title='USA states 인구와 문맹률')
        
        #20230525

#Section03방사형 차트 440p
#다중변수 데이터를 2차원 평면상에 시각화 할 수 있는 도구,fmsb 패키지 설치
install.packages('fmsb')
library(fmsb)

#데이터 준비
score <-c(80,50,90,59,40)
max.score<-rep(100,5) #100 을 5회 반복, 그래프 구성. 그래프에서의 끝
min.score <-rep(0,5)  #그래프 안쪽 구성
ds <- rbind(max.score, min.score, score)
ds <-data.frame(ds) #매트릭스를 데이터프레임으로 변환
colnames(ds) <-c('국어','영어','수학','물리','음악')
ds

#방사형 차트
radarchart(ds)
#첫번째 행 점수 범위의 최댓값
#두번째 행에는 점수 범위의 최솟값
# 세번째 행부터 실제 방사형 차트에 표시될 값들 입력

#매개변수의 지정
radarchart(ds, #데이터프레임
           pcol='dark green', #다각형 선의 색
           pfcol=rgb(0.2,0.5,0.5,0.5),#다각형 내부의 색
           plwd = 3, #다각형 선의 두께
           cglcol='grey', #거미줄의 색
           cglty=1, #거미줄의 타입
           cglwd = 0.8, #거미줄의 두께
           axistype = 1, #축의 레이블 타입
           seg=4, #축의 눈금 분할
           axislabcol = 'grey', #축의 레이블 색
           caxislabels = seq(0,100,25)) #축의 레이블 값

radarchart(ds2,
           pcol = '123456',
           pfcol = rgb(1,0.5,0.3,0.5),
           plwd = 2,
           cglcol = 'black',
           cglty = 1,
           cglwd = 0.3,
           seg=5,
           axislabcol = 'white',
           caxislabels = seq(0,100,25))

#Section04. ggplot 445p
#ggplot2 페키지 설치 필요

#일반적인 ggplot의 명령문 형태
#ggplot(data =xx, aes(x=x1,y=x2)) + geom_xx() + geom_yy() . . .

library(ggplot2)

#Chapter13
#section01 포브스 기업 리포트 데이터를 분석 466

#시험, install package 꼭 쓰기

rm(list=ls()) #remove all
install.packages('wordcloud')
library(wordcloud)

word<-c('abc','def','ghi','jk','lm')
frequency <-c(23,14,86,54,98) #빈도수
wordcloud(word, frequency,colors = 'blue')


